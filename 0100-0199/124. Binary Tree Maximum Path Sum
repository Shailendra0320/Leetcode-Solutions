/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int maxSum;
    public int maxPathSum(TreeNode root) {
        maxSum=Integer.MIN_VALUE;
        findMax(root);
        return maxSum;
    }
    private int findMax(TreeNode root){
       if(root==null)return 0;
       int left=Math.max(0,findMax(root.left));
       int right=Math.max(0,findMax(root.right));
       int currMax=root.val+left+right;
       maxSum=Math.max(maxSum,currMax);
       return root.val+Math.max(left,right);
    }
}
